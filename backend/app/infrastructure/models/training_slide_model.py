"""
FIA v3.0 - Training Slide SQLAlchemy Model
Infrastructure layer model for training_slides table
"""

from sqlalchemy import Column, String, Integer, DateTime, ForeignKey
from sqlalchemy.dialects.postgresql import UUID, JSONB
from sqlalchemy.sql import func
from sqlalchemy.orm import relationship
import uuid

from app.infrastructure.database import Base


class TrainingSlideModel(Base):
    """SQLAlchemy model for training_slides table"""
    
    __tablename__ = "training_slides"

    id = Column(UUID(as_uuid=True), primary_key=True, default=uuid.uuid4)
    submodule_id = Column(UUID(as_uuid=True), ForeignKey("training_submodules.id", ondelete="CASCADE"), nullable=False)
    order_in_submodule = Column(Integer, nullable=False)  # Order within submodule
    title = Column(String, nullable=False)  # Pre-generated by Gemini
    slide_type = Column(String(20), nullable=False, server_default='content')  # Type: plan, stage, module, content, quiz
    content = Column(String)  # Generated on-demand when learner reaches slide
    generated_at = Column(DateTime(timezone=True))  # When content was generated
    created_at = Column(DateTime(timezone=True), server_default=func.now())

    # Relationships
    training_submodule = relationship("TrainingSubmoduleModel", back_populates="training_slides")